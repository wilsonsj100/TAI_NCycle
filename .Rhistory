filter(!str_detect(Sample_Type, "CHKSTD")) %>%
filter(!str_detect(Sample_Type, "NA"))
#head(Samples)
#Now flag any areas that are above the 100ppm area for CH4
Samples$CH4_Curve <- ifelse(Samples$CH4_Area >71000, "High", "Low")
#head(Samples)
#Calculate CH4 concentrations in ppm
Samples$CH4_Conc_ppm <- ifelse(Samples$CH4_Area >71000, (Samples$CH4_Area-Slope_CH4_high$Intercept)/Slope_CH4_high$Slope,                                       (Samples$CH4_Area-Slope_CH4_low$Intercept)/Slope_CH4_low$Slope )
#Calculate CO2 concentrations in ppm
Samples$CO2_Conc_ppm <- ((Samples$CO2_Area-Slope_CO2$Intercept)/Slope_CO2$Slope)
#head(Samples)
##########make flags for any dilutions needed
#highest CH4 standard = 10000
#highest CO2 standard = 50000
Samples$CH4_Flag <- ifelse(Samples$CH4_Conc_ppm >10000, "Needs Dilution", "Within Range")
Samples$CO2_Flag <- ifelse(Samples$CO2_Conc_ppm >50000, "Needs Dilution", "Within Range")
#head(Samples)
chks <-  raw %>%
filter(!str_detect(Sample_Type, "STD_CH4")) %>%
filter(!str_detect(Sample_Type, "STD_CO2")) %>%
filter(!str_detect(Sample_Type, "Blank")) %>%
filter(!str_detect(Sample_Type, "Unknown")) %>%
filter(!str_detect(Sample_Type, "NA"))
#head(chks)
#Calculate CH4 concentrations in ppm
chks$CH4_Conc_ppm <- ifelse(chks$CH4_Area >71000,
(chks$CH4_Area-Slope_CH4_high$Intercept)/Slope_CH4_high$Slope,                                       (chks$CH4_Area-Slope_CH4_low$Intercept)/Slope_CH4_low$Slope )
#Calculate CO2 concentrations in ppm
chks$CO2_Conc_ppm <- ((chks$CO2_Area-Slope_CO2$Intercept)/Slope_CO2$Slope)
#change this if check standard concentrations are different
level_ch4 <- 5      #ppm
level_co2 <- 1000   #ppm
#calculate percent difference of check standards
chks$Ch4_diff <- ((chks$CH4_Conc_ppm - level_ch4)/((chks$CH4_Conc_ppm + level_ch4)/2)) * 100
chks$CH4_diff_flag <-  ifelse(chks$Ch4_diff <10, 'YES', 'NO, rerun')
chks$CO2_diff <- ((chks$CO2_Conc_ppm - level_co2)/((chks$CO2_Conc_ppm + level_co2)/2)) * 100
chks$CO2_diff_flag <-  ifelse(chks$CO2_diff <10, 'YES', 'NO, rerun')
#now plot the Ch4 concentrations and the CO2 concentrations vs. the expected concentration
#then also make the color the percent difference between the expected and observed concentration
ch4_chk <-  ggplot(data = chks, aes(x = Sample_ID, y = CH4_Conc_ppm, fill=CH4_diff_flag)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values=c( "darkgreen", "darkgrey"))+
#scale_fill_gradient2(low='red', mid='white', high='blue', space='Lab') +
theme_classic() + labs(x= " ", y="CH4  (ppm)", title="Check Stds: CH4") +
theme(legend.position="bottom") +  geom_hline(yintercept=level_ch4, linetype="dashed",
color = "black", size=1)
co2_chk <-  ggplot(data = chks, aes(x = Sample_ID, y = CO2_Conc_ppm, fill=CO2_diff_flag)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values=c("darkgreen", "darkgrey"))+
#scale_fill_gradient2(low='red', mid='white', high='blue', space='Lab') +
theme_classic() + labs(x= " ", y="CO2  (ppm)", title="Check Stds: CO2") +
theme(legend.position="bottom") +  geom_hline(yintercept=level_co2, linetype="dashed",
color = "black", size=1)
ggarrange(ch4_chk, co2_chk, nrow=1, ncol=2)
#multiply the concentration by the dilution factor
Samples$CH4_Conc_ppm_dilcorr <- (Samples$CH4_Conc_ppm * Samples$Dilution_Factor)
Samples$CO2_Conc_ppm_dilcorr <- (Samples$CO2_Conc_ppm * Samples$Dilution_Factor)
#check results
#head(Samples)
#quick first look at the samples
ch4_samples <-  ggplot(data = Samples, aes(x = Sample_ID, y = CH4_Conc_ppm, fill=CH4_Flag)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values=c("red","darkgreen"))+
#scale_fill_gradient2(low='red', mid='white', high='blue', space='Lab') +
theme_classic() + labs(x= " ", y="CH4 (ppm)", title="CH4: Green = Within Range") +
theme(legend.position="none")
co2_samples <-  ggplot(data = Samples, aes(x = Sample_ID, y = CO2_Conc_ppm, fill=CO2_Flag)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values=c("red", "darkgreen"))+
#scale_fill_gradient2(low='red', mid='white', high='blue', space='Lab') +
theme_classic() + labs(x= " ", y="CO2 (ppm)", title="CO2: Green = Within Range") +
theme(legend.position="none")
ggarrange(ch4_samples, co2_samples, nrow=1, ncol=2)
setwd("S:/Biogeochemistry/COMPASS Synoptics/Samples & Data/GHG/Soil GHG/Processed Data Files")
#check results
#head(Samples)
#pull out what we need
Samples1 <- Samples[ ,c(1:3,6:9,18:21)]
#head(Samples1)
IDs <- data.frame(do.call('rbind', strsplit(as.character(Samples1$Sample_ID),'_',fixed=TRUE)))
colnames(IDs) <- c("Site" , "Zone", "Replicate", "Depth")
IDs$Depth1 <- ifelse(IDs$Depth == '10cm', '10',
ifelse(IDs$Depth == '20cm', '20',
ifelse(IDs$Depth == '45cm', '45', '0')))
head(IDs)
#rejoin them to the dataframe
alldat <- cbind(IDs, Samples1)
head(alldat)
write.csv(alldat, "COMPASS_CBSYN_SGW_202406_Processed.csv")
library(dplyr)
library(ggplot2)
library(ggpubr)
library(stringr)
setwd("S:/Biogeochemistry/COMPASS Synoptics/Samples & Data/GHG/Soil GHG/Raw Data Files/2024")
#Read in June Data
raw <- read.csv("COMPASS_CBSYN_SGW_SWH_202404_05_entered.csv")
head(raw)
#pull out methane standards
stds_ch4 <-  raw %>%
filter(str_detect(Sample_Type, "STD_CH4"))
#head(stds_ch4)
#split into high curve and low curve for CH4
stds_ch4_low <- stds_ch4  %>%
filter(!STD_Conc > 100)
#Low curve for CH4
CH4_Low <- ggplot(stds_ch4_low, aes(STD_Conc, CH4_Area)) + geom_point(size=4) +
geom_smooth(method = "lm", se = FALSE) + labs(title="CH4 LOW Std Curve")
CH4_Low
CH4_Low_lm <- lm(stds_ch4_low$CH4_Area ~ stds_ch4_low$STD_Conc)
summary(CH4_Low_lm)
cf <- coef(CH4_Low_lm)
#create data frame with 1 rows and 0 columns
Slope_CH4_low <- data.frame(matrix(ncol = 0, nrow = 1))
Slope_CH4_low$Curve <- "Slope_CH4_low"
Slope_CH4_low$R2 <- summary(CH4_Low_lm)$adj.r.squared
Slope_CH4_low$Slope <- cf[2]
Slope_CH4_low$Intercept <- cf[1]
#head(Slope_CH4_low)
#High curve for CH4
CH4_High <- ggplot(stds_ch4, aes(STD_Conc, CH4_Area)) + geom_point(size=4) +
geom_smooth(method = "lm", se = FALSE) + labs(title="CH4 HIGH Std Curve")
CH4_High
stds_ch4_lm <- lm(stds_ch4$CH4_Area ~ stds_ch4$STD_Conc)
summary(stds_ch4_lm)
cf <- coef(stds_ch4_lm)
#create data frame with 1 rows and 0 columns
Slope_CH4_high <- data.frame(matrix(ncol = 0, nrow = 1))
Slope_CH4_high$Curve <- "Slope_CH4_high"
Slope_CH4_high$R2 <- summary(stds_ch4_lm)$adj.r.squared
Slope_CH4_high$Slope <- cf[2]
Slope_CH4_high$Intercept <- cf[1]
#head(Slope_CH4_high)
#pull out co2 standards
stds_co2 <-  raw %>%
filter(str_detect(Sample_Type, "STD_CO2"))
#head(stds_co2)
#CO2 Curve
CO2_stds <- ggplot(stds_co2, aes(STD_Conc, CO2_Area)) + geom_point(size=4) +
geom_smooth(method = "lm", se = FALSE, color="red") + labs(title="CO2 Std Curve")
CO2_stds
stds_co2_lm <- lm(stds_co2$CO2_Area ~ stds_co2$STD_Conc)
summary(stds_co2_lm)
cf <- coef(stds_co2_lm)
#create data frame with 1 rows and 0 columns
Slope_CO2 <- data.frame(matrix(ncol = 0, nrow = 1))
Slope_CO2$Curve <- "Slope_CO2"
Slope_CO2$R2 <- summary(stds_co2_lm)$adj.r.squared
Slope_CO2$Slope <- cf[2]
Slope_CO2$Intercept <- cf[1]
#head(Slope_CO2)
#pull all the slopes together into one dataframe
Slopes <- rbind(Slope_CH4_low, Slope_CH4_high, Slope_CO2)
#head(Slopes)
#needs changed each time #####
Slopes$Run_Date <- c(202406, 202406, 202406)
log <- read.csv("COMPASS_Varian_QAQC_2024.csv")
head(log)
log <- log[ ,-c(1)]
log <- rbind(log, Slopes)
Slopes_chk <- ggplot(log, aes(Run_Date, Slope, col=Curve)) + geom_point(size=4) + geom_line() + theme_bw()
Slopes_chk
write.csv(log, "COMPASS_Varian_QAQC_2024.csv")
setwd("S:/Biogeochemistry/COMPASS Synoptics/Samples & Data/GHG/Soil GHG/Raw Data Files/2024")
#Read in June Data
raw <- read.csv("COMPASS_CBSYN_SGW_SWH_202404_05_entered.csv")
head(raw)
#pull out methane standards
stds_ch4 <-  raw %>%
filter(str_detect(Sample_Type, "STD_CH4"))
#head(stds_ch4)
#split into high curve and low curve for CH4
stds_ch4_low <- stds_ch4  %>%
filter(!STD_Conc > 100)
#Low curve for CH4
CH4_Low <- ggplot(stds_ch4_low, aes(STD_Conc, CH4_Area)) + geom_point(size=4) +
geom_smooth(method = "lm", se = FALSE) + labs(title="CH4 LOW Std Curve")
CH4_Low
CH4_Low_lm <- lm(stds_ch4_low$CH4_Area ~ stds_ch4_low$STD_Conc)
summary(CH4_Low_lm)
cf <- coef(CH4_Low_lm)
#create data frame with 1 rows and 0 columns
Slope_CH4_low <- data.frame(matrix(ncol = 0, nrow = 1))
Slope_CH4_low$Curve <- "Slope_CH4_low"
Slope_CH4_low$R2 <- summary(CH4_Low_lm)$adj.r.squared
Slope_CH4_low$Slope <- cf[2]
Slope_CH4_low$Intercept <- cf[1]
#head(Slope_CH4_low)
#High curve for CH4
CH4_High <- ggplot(stds_ch4, aes(STD_Conc, CH4_Area)) + geom_point(size=4) +
geom_smooth(method = "lm", se = FALSE) + labs(title="CH4 HIGH Std Curve")
CH4_High
stds_ch4_lm <- lm(stds_ch4$CH4_Area ~ stds_ch4$STD_Conc)
summary(stds_ch4_lm)
cf <- coef(stds_ch4_lm)
#create data frame with 1 rows and 0 columns
Slope_CH4_high <- data.frame(matrix(ncol = 0, nrow = 1))
Slope_CH4_high$Curve <- "Slope_CH4_high"
Slope_CH4_high$R2 <- summary(stds_ch4_lm)$adj.r.squared
Slope_CH4_high$Slope <- cf[2]
Slope_CH4_high$Intercept <- cf[1]
#head(Slope_CH4_high)
#pull out co2 standards
stds_co2 <-  raw %>%
filter(str_detect(Sample_Type, "STD_CO2"))
#head(stds_co2)
#CO2 Curve
CO2_stds <- ggplot(stds_co2, aes(STD_Conc, CO2_Area)) + geom_point(size=4) +
geom_smooth(method = "lm", se = FALSE, color="red") + labs(title="CO2 Std Curve")
CO2_stds
stds_co2_lm <- lm(stds_co2$CO2_Area ~ stds_co2$STD_Conc)
summary(stds_co2_lm)
cf <- coef(stds_co2_lm)
#create data frame with 1 rows and 0 columns
Slope_CO2 <- data.frame(matrix(ncol = 0, nrow = 1))
Slope_CO2$Curve <- "Slope_CO2"
Slope_CO2$R2 <- summary(stds_co2_lm)$adj.r.squared
Slope_CO2$Slope <- cf[2]
Slope_CO2$Intercept <- cf[1]
#head(Slope_CO2)
#pull all the slopes together into one dataframe
Slopes <- rbind(Slope_CH4_low, Slope_CH4_high, Slope_CO2)
#head(Slopes)
#needs changed each time #####
Slopes$Run_Date <- c(202404.5, 202404.5, 202404.5)
log <- read.csv("COMPASS_Varian_QAQC_2024.csv")
head(log)
log <- log[ ,-c(1)]
log <- rbind(log, Slopes)
Slopes_chk <- ggplot(log, aes(Run_Date, Slope, col=Curve)) + geom_point(size=4) + geom_line() + theme_bw()
Slopes_chk
write.csv(log, "COMPASS_Varian_QAQC_2024.csv")
#head(raw)
#pull out methane standards
Samples <-  raw %>%
filter(!str_detect(Sample_Type, "STD_CH4")) %>%
filter(!str_detect(Sample_Type, "STD_CO2")) %>%
filter(!str_detect(Sample_Type, "Blank")) %>%
filter(!str_detect(Sample_Type, "Chk_STD")) %>%
filter(!str_detect(Sample_Type, "CHKSTD")) %>%
filter(!str_detect(Sample_Type, "NA"))
#head(Samples)
#Now flag any areas that are above the 100ppm area for CH4
Samples$CH4_Curve <- ifelse(Samples$CH4_Area >71000, "High", "Low")
#head(Samples)
#Calculate CH4 concentrations in ppm
Samples$CH4_Conc_ppm <- ifelse(Samples$CH4_Area >71000, (Samples$CH4_Area-Slope_CH4_high$Intercept)/Slope_CH4_high$Slope,                                       (Samples$CH4_Area-Slope_CH4_low$Intercept)/Slope_CH4_low$Slope )
#Calculate CO2 concentrations in ppm
Samples$CO2_Conc_ppm <- ((Samples$CO2_Area-Slope_CO2$Intercept)/Slope_CO2$Slope)
#head(Samples)
##########make flags for any dilutions needed
#highest CH4 standard = 10000
#highest CO2 standard = 50000
Samples$CH4_Flag <- ifelse(Samples$CH4_Conc_ppm >10000, "Needs Dilution", "Within Range")
Samples$CO2_Flag <- ifelse(Samples$CO2_Conc_ppm >50000, "Needs Dilution", "Within Range")
#head(Samples)
chks <-  raw %>%
filter(!str_detect(Sample_Type, "STD_CH4")) %>%
filter(!str_detect(Sample_Type, "STD_CO2")) %>%
filter(!str_detect(Sample_Type, "Blank")) %>%
filter(!str_detect(Sample_Type, "Unknown")) %>%
filter(!str_detect(Sample_Type, "NA"))
#head(chks)
#Calculate CH4 concentrations in ppm
chks$CH4_Conc_ppm <- ifelse(chks$CH4_Area >71000,
(chks$CH4_Area-Slope_CH4_high$Intercept)/Slope_CH4_high$Slope,                                       (chks$CH4_Area-Slope_CH4_low$Intercept)/Slope_CH4_low$Slope )
#Calculate CO2 concentrations in ppm
chks$CO2_Conc_ppm <- ((chks$CO2_Area-Slope_CO2$Intercept)/Slope_CO2$Slope)
#change this if check standard concentrations are different
level_ch4 <- 5      #ppm
level_co2 <- 1000   #ppm
#calculate percent difference of check standards
chks$Ch4_diff <- ((chks$CH4_Conc_ppm - level_ch4)/((chks$CH4_Conc_ppm + level_ch4)/2)) * 100
chks$CH4_diff_flag <-  ifelse(chks$Ch4_diff <10, 'YES', 'NO, rerun')
chks$CO2_diff <- ((chks$CO2_Conc_ppm - level_co2)/((chks$CO2_Conc_ppm + level_co2)/2)) * 100
chks$CO2_diff_flag <-  ifelse(chks$CO2_diff <10, 'YES', 'NO, rerun')
#now plot the Ch4 concentrations and the CO2 concentrations vs. the expected concentration
#then also make the color the percent difference between the expected and observed concentration
ch4_chk <-  ggplot(data = chks, aes(x = Sample_ID, y = CH4_Conc_ppm, fill=CH4_diff_flag)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values=c( "darkgreen", "darkgrey"))+
#scale_fill_gradient2(low='red', mid='white', high='blue', space='Lab') +
theme_classic() + labs(x= " ", y="CH4  (ppm)", title="Check Stds: CH4") +
theme(legend.position="bottom") +  geom_hline(yintercept=level_ch4, linetype="dashed",
color = "black", size=1)
co2_chk <-  ggplot(data = chks, aes(x = Sample_ID, y = CO2_Conc_ppm, fill=CO2_diff_flag)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values=c("darkgreen", "darkgrey"))+
#scale_fill_gradient2(low='red', mid='white', high='blue', space='Lab') +
theme_classic() + labs(x= " ", y="CO2  (ppm)", title="Check Stds: CO2") +
theme(legend.position="bottom") +  geom_hline(yintercept=level_co2, linetype="dashed",
color = "black", size=1)
ggarrange(ch4_chk, co2_chk, nrow=1, ncol=2)
#multiply the concentration by the dilution factor
Samples$CH4_Conc_ppm_dilcorr <- (Samples$CH4_Conc_ppm * Samples$Dilution_Factor)
Samples$CO2_Conc_ppm_dilcorr <- (Samples$CO2_Conc_ppm * Samples$Dilution_Factor)
#check results
#head(Samples)
#quick first look at the samples
ch4_samples <-  ggplot(data = Samples, aes(x = Sample_ID, y = CH4_Conc_ppm, fill=CH4_Flag)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values=c("red","darkgreen"))+
#scale_fill_gradient2(low='red', mid='white', high='blue', space='Lab') +
theme_classic() + labs(x= " ", y="CH4 (ppm)", title="CH4: Green = Within Range") +
theme(legend.position="none")
co2_samples <-  ggplot(data = Samples, aes(x = Sample_ID, y = CO2_Conc_ppm, fill=CO2_Flag)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values=c("red", "darkgreen"))+
#scale_fill_gradient2(low='red', mid='white', high='blue', space='Lab') +
theme_classic() + labs(x= " ", y="CO2 (ppm)", title="CO2: Green = Within Range") +
theme(legend.position="none")
ggarrange(ch4_samples, co2_samples, nrow=1, ncol=2)
setwd("S:/Biogeochemistry/COMPASS Synoptics/Samples & Data/GHG/Soil GHG/Processed Data Files")
#check results
#head(Samples)
#pull out what we need
Samples1 <- Samples[ ,c(1:3,6:9,18:21)]
#head(Samples1)
IDs <- data.frame(do.call('rbind', strsplit(as.character(Samples1$Sample_ID),'_',fixed=TRUE)))
colnames(IDs) <- c("Site" , "Zone", "Replicate", "Depth")
IDs$Depth1 <- ifelse(IDs$Depth == '10cm', '10',
ifelse(IDs$Depth == '20cm', '20',
ifelse(IDs$Depth == '45cm', '45', '0')))
head(IDs)
#rejoin them to the dataframe
alldat <- cbind(IDs, Samples1)
head(alldat)
write.csv(alldat, "COMPASS_CBSYN_SGW_202406_Processed.csv")
setwd("S:/Biogeochemistry/COMPASS Synoptics/Samples & Data/GHG/Soil GHG/Processed Data Files")
#check results
#head(Samples)
#pull out what we need
Samples1 <- Samples[ ,c(1:3,6:9,18:21)]
#head(Samples1)
IDs <- data.frame(do.call('rbind', strsplit(as.character(Samples1$Sample_ID),'_',fixed=TRUE)))
colnames(IDs) <- c("Site" , "Zone", "Replicate", "Depth")
IDs$Depth1 <- ifelse(IDs$Depth == '10cm', '10',
ifelse(IDs$Depth == '20cm', '20',
ifelse(IDs$Depth == '45cm', '45', '0')))
head(IDs)
#rejoin them to the dataframe
alldat <- cbind(IDs, Samples1)
head(alldat)
write.csv(alldat, "COMPASS_CBSYN_SGW_202404-05_SWH_Processed.csv")
library(dplyr)
library(ggplot2)
library(ggpubr)
library(stringr)
setwd("S:/Biogeochemistry/COMPASS Synoptics/Samples & Data/GHG/Soil GHG/Raw Data Files/2024")
#Read in June Data
raw <- read.csv("COMPASS_CBSYN_SGW_202406_entered.csv")
head(raw)
#pull out methane standards
stds_ch4 <-  raw %>%
filter(str_detect(Sample_Type, "STD_CH4"))
#head(stds_ch4)
#split into high curve and low curve for CH4
stds_ch4_low <- stds_ch4  %>%
filter(!STD_Conc > 100)
#Low curve for CH4
CH4_Low <- ggplot(stds_ch4_low, aes(STD_Conc, CH4_Area)) + geom_point(size=4) +
geom_smooth(method = "lm", se = FALSE) + labs(title="CH4 LOW Std Curve")
CH4_Low
CH4_Low_lm <- lm(stds_ch4_low$CH4_Area ~ stds_ch4_low$STD_Conc)
summary(CH4_Low_lm)
cf <- coef(CH4_Low_lm)
#create data frame with 1 rows and 0 columns
Slope_CH4_low <- data.frame(matrix(ncol = 0, nrow = 1))
Slope_CH4_low$Curve <- "Slope_CH4_low"
Slope_CH4_low$R2 <- summary(CH4_Low_lm)$adj.r.squared
Slope_CH4_low$Slope <- cf[2]
Slope_CH4_low$Intercept <- cf[1]
#head(Slope_CH4_low)
#High curve for CH4
CH4_High <- ggplot(stds_ch4, aes(STD_Conc, CH4_Area)) + geom_point(size=4) +
geom_smooth(method = "lm", se = FALSE) + labs(title="CH4 HIGH Std Curve")
CH4_High
stds_ch4_lm <- lm(stds_ch4$CH4_Area ~ stds_ch4$STD_Conc)
summary(stds_ch4_lm)
cf <- coef(stds_ch4_lm)
#create data frame with 1 rows and 0 columns
Slope_CH4_high <- data.frame(matrix(ncol = 0, nrow = 1))
Slope_CH4_high$Curve <- "Slope_CH4_high"
Slope_CH4_high$R2 <- summary(stds_ch4_lm)$adj.r.squared
Slope_CH4_high$Slope <- cf[2]
Slope_CH4_high$Intercept <- cf[1]
#head(Slope_CH4_high)
#pull out co2 standards
stds_co2 <-  raw %>%
filter(str_detect(Sample_Type, "STD_CO2"))
#head(stds_co2)
#CO2 Curve
CO2_stds <- ggplot(stds_co2, aes(STD_Conc, CO2_Area)) + geom_point(size=4) +
geom_smooth(method = "lm", se = FALSE, color="red") + labs(title="CO2 Std Curve")
CO2_stds
stds_co2_lm <- lm(stds_co2$CO2_Area ~ stds_co2$STD_Conc)
summary(stds_co2_lm)
cf <- coef(stds_co2_lm)
#create data frame with 1 rows and 0 columns
Slope_CO2 <- data.frame(matrix(ncol = 0, nrow = 1))
Slope_CO2$Curve <- "Slope_CO2"
Slope_CO2$R2 <- summary(stds_co2_lm)$adj.r.squared
Slope_CO2$Slope <- cf[2]
Slope_CO2$Intercept <- cf[1]
#head(Slope_CO2)
#pull all the slopes together into one dataframe
Slopes <- rbind(Slope_CH4_low, Slope_CH4_high, Slope_CO2)
#head(Slopes)
#needs changed each time #####
Slopes$Run_Date <- c(202406, 202406, 202406)
log <- read.csv("COMPASS_Varian_QAQC_2024.csv")
head(log)
log <- log[ ,-c(1)]
log <- rbind(log, Slopes)
Slopes_chk <- ggplot(log, aes(Run_Date, Slope, col=Curve)) + geom_point(size=4) + geom_line() + theme_bw()
Slopes_chk
write.csv(log, "COMPASS_Varian_QAQC_2024.csv")
#head(raw)
#pull out methane standards
Samples <-  raw %>%
filter(!str_detect(Sample_Type, "STD_CH4")) %>%
filter(!str_detect(Sample_Type, "STD_CO2")) %>%
filter(!str_detect(Sample_Type, "Blank")) %>%
filter(!str_detect(Sample_Type, "Chk_STD")) %>%
filter(!str_detect(Sample_Type, "CHKSTD")) %>%
filter(!str_detect(Sample_Type, "NA"))
#head(Samples)
#Now flag any areas that are above the 100ppm area for CH4
Samples$CH4_Curve <- ifelse(Samples$CH4_Area >71000, "High", "Low")
#head(Samples)
#Calculate CH4 concentrations in ppm
Samples$CH4_Conc_ppm <- ifelse(Samples$CH4_Area >71000, (Samples$CH4_Area-Slope_CH4_high$Intercept)/Slope_CH4_high$Slope,                                       (Samples$CH4_Area-Slope_CH4_low$Intercept)/Slope_CH4_low$Slope )
#Calculate CO2 concentrations in ppm
Samples$CO2_Conc_ppm <- ((Samples$CO2_Area-Slope_CO2$Intercept)/Slope_CO2$Slope)
#head(Samples)
##########make flags for any dilutions needed
#highest CH4 standard = 10000
#highest CO2 standard = 50000
Samples$CH4_Flag <- ifelse(Samples$CH4_Conc_ppm >10000, "Needs Dilution", "Within Range")
Samples$CO2_Flag <- ifelse(Samples$CO2_Conc_ppm >50000, "Needs Dilution", "Within Range")
#head(Samples)
chks <-  raw %>%
filter(!str_detect(Sample_Type, "STD_CH4")) %>%
filter(!str_detect(Sample_Type, "STD_CO2")) %>%
filter(!str_detect(Sample_Type, "Blank")) %>%
filter(!str_detect(Sample_Type, "Unknown")) %>%
filter(!str_detect(Sample_Type, "NA"))
#head(chks)
#Calculate CH4 concentrations in ppm
chks$CH4_Conc_ppm <- ifelse(chks$CH4_Area >71000,
(chks$CH4_Area-Slope_CH4_high$Intercept)/Slope_CH4_high$Slope,                                       (chks$CH4_Area-Slope_CH4_low$Intercept)/Slope_CH4_low$Slope )
#Calculate CO2 concentrations in ppm
chks$CO2_Conc_ppm <- ((chks$CO2_Area-Slope_CO2$Intercept)/Slope_CO2$Slope)
#change this if check standard concentrations are different
level_ch4 <- 5      #ppm
level_co2 <- 1000   #ppm
#calculate percent difference of check standards
chks$Ch4_diff <- ((chks$CH4_Conc_ppm - level_ch4)/((chks$CH4_Conc_ppm + level_ch4)/2)) * 100
chks$CH4_diff_flag <-  ifelse(chks$Ch4_diff <10, 'YES', 'NO, rerun')
chks$CO2_diff <- ((chks$CO2_Conc_ppm - level_co2)/((chks$CO2_Conc_ppm + level_co2)/2)) * 100
chks$CO2_diff_flag <-  ifelse(chks$CO2_diff <10, 'YES', 'NO, rerun')
#now plot the Ch4 concentrations and the CO2 concentrations vs. the expected concentration
#then also make the color the percent difference between the expected and observed concentration
ch4_chk <-  ggplot(data = chks, aes(x = Sample_ID, y = CH4_Conc_ppm, fill=CH4_diff_flag)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values=c( "darkgreen", "darkgrey"))+
#scale_fill_gradient2(low='red', mid='white', high='blue', space='Lab') +
theme_classic() + labs(x= " ", y="CH4  (ppm)", title="Check Stds: CH4") +
theme(legend.position="bottom") +  geom_hline(yintercept=level_ch4, linetype="dashed",
color = "black", size=1)
co2_chk <-  ggplot(data = chks, aes(x = Sample_ID, y = CO2_Conc_ppm, fill=CO2_diff_flag)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values=c("darkgreen", "darkgrey"))+
#scale_fill_gradient2(low='red', mid='white', high='blue', space='Lab') +
theme_classic() + labs(x= " ", y="CO2  (ppm)", title="Check Stds: CO2") +
theme(legend.position="bottom") +  geom_hline(yintercept=level_co2, linetype="dashed",
color = "black", size=1)
ggarrange(ch4_chk, co2_chk, nrow=1, ncol=2)
#multiply the concentration by the dilution factor
Samples$CH4_Conc_ppm_dilcorr <- (Samples$CH4_Conc_ppm * Samples$Dilution_Factor)
Samples$CO2_Conc_ppm_dilcorr <- (Samples$CO2_Conc_ppm * Samples$Dilution_Factor)
#check results
#head(Samples)
#quick first look at the samples
ch4_samples <-  ggplot(data = Samples, aes(x = Sample_ID, y = CH4_Conc_ppm, fill=CH4_Flag)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values=c("red","darkgreen"))+
#scale_fill_gradient2(low='red', mid='white', high='blue', space='Lab') +
theme_classic() + labs(x= " ", y="CH4 (ppm)", title="CH4: Green = Within Range") +
theme(legend.position="none")
co2_samples <-  ggplot(data = Samples, aes(x = Sample_ID, y = CO2_Conc_ppm, fill=CO2_Flag)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values=c("red", "darkgreen"))+
#scale_fill_gradient2(low='red', mid='white', high='blue', space='Lab') +
theme_classic() + labs(x= " ", y="CO2 (ppm)", title="CO2: Green = Within Range") +
theme(legend.position="none")
ggarrange(ch4_samples, co2_samples, nrow=1, ncol=2)
setwd("S:/Biogeochemistry/COMPASS Synoptics/Samples & Data/GHG/Soil GHG/Processed Data Files")
#check results
#head(Samples)
#pull out what we need
Samples1 <- Samples[ ,c(1:3,6:9,18:21)]
#head(Samples1)
IDs <- data.frame(do.call('rbind', strsplit(as.character(Samples1$Sample_ID),'_',fixed=TRUE)))
colnames(IDs) <- c("Site" , "Zone", "Replicate", "Depth")
IDs$Depth1 <- ifelse(IDs$Depth == '10cm', '10',
ifelse(IDs$Depth == '20cm', '20',
ifelse(IDs$Depth == '45cm', '45', '0')))
head(IDs)
#rejoin them to the dataframe
alldat <- cbind(IDs, Samples1)
head(alldat)
write.csv(alldat, "COMPASS_CBSYN_SGW_202406_Processed.csv")
